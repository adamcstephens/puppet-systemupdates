check_upgraded_package() {
  package=$1
  # check today for a change to the requested package
  rpm -qa --queryformat '%{installtime}(%{installtime:date}) %{name}\n' $package | grep -q "$(date +"%d %b %Y")"
  retval=$?
  if [ $retval -eq 0 ]
  then
    log_and_output "Found new package: $(rpm -qa $package | sort | head -n1)"
  fi
  return $retval
}

check_reboot() {
  if rpm -q kernel > /dev/null
  then
    kernelpkg="kernel"
  elif rpm -q kernel-PAE > /dev/null
  then
    kernelpkg="kernel-PAE"
  fi
  UNAME=`uname -r | awk -F\- '{print $2}' | sed 's/EL//g;s/el5//g;s/smp//g;s/PAE//g'`
  CURMAJ=`echo $UNAME | cut -f1 -d.`
  CURMIN=`echo $UNAME | cut -f2 -d.`
  CURSUB=`echo $UNAME | cut -f3 -d.`
  doreboot=false
  for kern in `rpm -q --queryformat="%{version}-%{release}\n" $kernelpkg | awk -F\- '{print $2}' | sed 's/EL//g;s/el5//g;s/smp//g;s/PAE//g'`
  do
    KERNMAJ=`echo $kern | cut -f1 -d.`
    KERNMIN=`echo $kern | cut -f2 -d.`
    KERNSUB=`echo $kern | cut -f3 -d.`
    if [[ "$KERNMAJ" -gt "$CURMAJ" ]]
    then
      echo "Kernel Update: $kern > $UNAME"
      doreboot=true
    elif [[ "$KERNMAJ" -eq "$CURMAJ" ]]
    then
      if [[ "$KERNMIN" -gt "$CURMIN" ]]
      then
        log_and_output "Kernel Update: $kern > $UNAME"
        doreboot=true
      elif [[ "$KERNMIN" -eq "$CURMIN" ]]
      then
        if [[ "$KERNSUB" -gt "$CURSUB" ]]
        then
          log_and_output "Kernel Update: $kern > $UNAME"
          doreboot=true
        fi
      fi
    fi
  done

<% @pkgtosystemreboot.each do | pkg | -%>
  check_upgraded_package <%= pkg %> && doreboot=true

<% end -%>
  if [[ "$doreboot" == 'true' ]]
  then
    return 0
  else
    return 1
  fi
}

do_reboot() {
  if check_reboot
  then
    log_and_output "Rebooting system."
    shutdown -r now
<% if @pkgtosvcrestart.length > 0  then -%>
  else
    do_pkgtosvc_restart
<% end -%>
  fi
}

